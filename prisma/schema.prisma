
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  profile Profile?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Profile {
  id Int @id @default(autoincrement())
  fullName String
  bio String?
  mobile String?
  bots Bot[]

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int @unique



  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("profiles")
}

model Bot {
  id Int @id @default(autoincrement())
  name String
  description String?
  instructions Instruction[]

  Profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId Int 

  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt

  @@map("bots")
}

model Instruction {
  id Int @id @default(autoincrement())
  instruction String
  action Action[]

  Bot Bot @relation(fields: [botId], references: [id], onDelete: Cascade)
  botId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("instructions")
}

model Action {
  id Int @id @default(autoincrement())
  action String

  Instruction Instruction @relation(fields: [instructionId], references: [id], onDelete: Cascade)
  instructionId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("actions")
}

//todav√≠a tengo que buscar como se hace el log de operaciones
// model Log {
//   id Int @id @default(autoincrement())
//   user Int
//   instruction Int
//   description String


//   @@map("logs")
// }